<UserControl x:Class="VS2022Support.ResourceMonitorStatusBar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VS2022Support"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Open taskmgr" Click="MenuItem_Click"/>
        </ContextMenu>
    </UserControl.ContextMenu>
    <UserControl.Resources>
        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{Binding TextForegroundBrush, Mode=OneWay}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template" Value="{DynamicResource ButtonTemplate}"/>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding TextForegroundBrush, Mode=OneWay}"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#7FBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#7F3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#9FC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#9F2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="4">
                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="true">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="true">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </UserControl.Resources>
    <StackPanel x:Name="Container" Orientation="Horizontal">
        <Button x:Name="CPUButton" Margin="5,0,5,0" Click="CPUButton_Click">
            <TextBlock>
                <Run Text="CPU: "/>
                <Run Text="{Binding DataModel.CPU, Mode=OneWay}"/>
            </TextBlock>
        </Button>
        <Button x:Name="RAMButton" Margin="5,0,5,0" Click="RAMButton_Click">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="RAM: "/>
                
                <TextBlock Text="{Binding DataModel.RAM, Mode=OneWay}"/>
                <TextBlock Text=" / " Visibility="{Binding DataModel.RamSeperatorVisibility, Mode=OneWay}"/>
                <TextBlock Text="{Binding DataModel.TotalRAM, Mode=OneWay}"/>
            </StackPanel>
        </Button>
        <TextBlock x:Name="DiskText" Margin="5,0,5,0" Visibility="{Binding DataModel.DiskVisibility, Mode=OneWay}">
            <Run Text="Disk: "/>
            <Run Text="{Binding DataModel.Disk, Mode=OneWay}"/>
        </TextBlock>
        <TextBlock x:Name="BatteryText" Margin="5,0,5,0">
            <Run Text="Battery: "/>
            <Run Text="{Binding DataModel.BatteryPercent, Mode=OneWay}"/>
            <Run Text="{Binding DataModel.BatteryTime, Mode=OneWay}"/>
        </TextBlock>

        <Popup PlacementTarget="{Binding ElementName=CPUButton}" x:Name="CPUPopup" StaysOpen="False" Placement="Top" Opened="CPUPopup_Opened">
            <local:CPUPanel x:Name="CPUPanel"/>
        </Popup>

        <Popup PlacementTarget="{Binding ElementName=RAMButton}" StaysOpen="False" Placement="Top">
            <local:RAMPanel x:Name="RAMPanel"/>
        </Popup>
    </StackPanel>
</UserControl>
